``add_integer()`` returns the integer sum of two numbers.

1 - Sum of integers
========================================

``add_integer()`` works with two integers:

::
	>>> add_integer = __import__("0-add_integer").add_integer
	>>> add_integer(5, 6)
	11

2 - Sum of floating point values
========================================

``add_integer()`` works with two floating points:

::
	>>> add_integer(2.4, 34.7)
	37

3 - Sum of mixed types
========================================

``add_integer()`` works with mixed types:

::
	>>> add_integer(22.4, 10)
	32

4 - Sum of only one parameter
========================================

``add_integer()`` can work with only one parameter, since the default parameter
for ``b`` is 98:

::
	>>> add_integer(2)
	100

5 - Unallowed types
========================================

``add_integer()`` will not work with types that are different from integers and
floating point values:

::
	>>> add_integer('a', 'b')
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(18, 'e')
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer("foo", "bar")
	Traceback (most recent call last):
	TypeError: a must be an integer

